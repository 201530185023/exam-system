<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njxz.exam.dao.QuestionsMapper">
  <resultMap id="BaseResultMap" type="com.njxz.exam.modle.Questions">
    <id column="q_id" jdbcType="BIGINT" property="qId" />
    <result column="question_type_id" jdbcType="BIGINT" property="questionTypeId" />
    <result column="konwledge_point_id" jdbcType="BIGINT" property="konwledgePointId" />
    <result column="q_title" jdbcType="VARCHAR" property="qTitle" />
    <result column="q_answer" jdbcType="VARCHAR" property="qAnswer" />
    <result column="q_add_time" jdbcType="TIMESTAMP" property="qAddTime" />
    <result column="q_user_id" jdbcType="BIGINT" property="qUserId" />
    <result column="q_difficulty_level" jdbcType="DOUBLE" property="qDifficultyLevel" />
    <result column="s_id" jdbcType="BIGINT" property="sId" />
    <result column="q_get_times" jdbcType="INTEGER" property="qGetTimes" />
    <result column="q_did_num" jdbcType="INTEGER" property="qDidNum" />
    <result column="q_correct_num" jdbcType="INTEGER" property="qCorrectNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    q_id, question_type_id, konwledge_point_id, q_title, q_answer, q_add_time, q_user_id, 
    q_difficulty_level, s_id, q_get_times, q_did_num, q_correct_num
  </sql>
  <select id="selectByExample" parameterType="com.njxz.exam.modle.QuestionsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from questions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from questions
    where q_id = #{qId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from questions
    where q_id = #{qId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.njxz.exam.modle.QuestionsExample">
    delete from questions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.njxz.exam.modle.Questions">
    insert into questions (q_id, question_type_id, konwledge_point_id, 
      q_title, q_answer, q_add_time, 
      q_user_id, q_difficulty_level, s_id, 
      q_get_times, q_did_num, q_correct_num
      )
    values (#{qId,jdbcType=BIGINT}, #{questionTypeId,jdbcType=BIGINT}, #{konwledgePointId,jdbcType=BIGINT}, 
      #{qTitle,jdbcType=VARCHAR}, #{qAnswer,jdbcType=VARCHAR}, #{qAddTime,jdbcType=TIMESTAMP}, 
      #{qUserId,jdbcType=BIGINT}, #{qDifficultyLevel,jdbcType=DOUBLE}, #{sId,jdbcType=BIGINT}, 
      #{qGetTimes,jdbcType=INTEGER}, #{qDidNum,jdbcType=INTEGER}, #{qCorrectNum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.njxz.exam.modle.Questions">
    insert into questions
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="qId != null">
        q_id,
      </if>
      <if test="questionTypeId != null">
        question_type_id,
      </if>
      <if test="konwledgePointId != null">
        konwledge_point_id,
      </if>
      <if test="qTitle != null">
        q_title,
      </if>
      <if test="qAnswer != null">
        q_answer,
      </if>
      <if test="qAddTime != null">
        q_add_time,
      </if>
      <if test="qUserId != null">
        q_user_id,
      </if>
      <if test="qDifficultyLevel != null">
        q_difficulty_level,
      </if>
      <if test="sId != null">
        s_id,
      </if>
      <if test="qGetTimes != null">
        q_get_times,
      </if>
      <if test="qDidNum != null">
        q_did_num,
      </if>
      <if test="qCorrectNum != null">
        q_correct_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="qId != null">
        #{qId,jdbcType=BIGINT},
      </if>
      <if test="questionTypeId != null">
        #{questionTypeId,jdbcType=BIGINT},
      </if>
      <if test="konwledgePointId != null">
        #{konwledgePointId,jdbcType=BIGINT},
      </if>
      <if test="qTitle != null">
        #{qTitle,jdbcType=VARCHAR},
      </if>
      <if test="qAnswer != null">
        #{qAnswer,jdbcType=VARCHAR},
      </if>
      <if test="qAddTime != null">
        #{qAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="qUserId != null">
        #{qUserId,jdbcType=BIGINT},
      </if>
      <if test="qDifficultyLevel != null">
        #{qDifficultyLevel,jdbcType=DOUBLE},
      </if>
      <if test="sId != null">
        #{sId,jdbcType=BIGINT},
      </if>
      <if test="qGetTimes != null">
        #{qGetTimes,jdbcType=INTEGER},
      </if>
      <if test="qDidNum != null">
        #{qDidNum,jdbcType=INTEGER},
      </if>
      <if test="qCorrectNum != null">
        #{qCorrectNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.njxz.exam.modle.QuestionsExample" resultType="java.lang.Long">
    select count(*) from questions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update questions
    <set>
      <if test="record.qId != null">
        q_id = #{record.qId,jdbcType=BIGINT},
      </if>
      <if test="record.questionTypeId != null">
        question_type_id = #{record.questionTypeId,jdbcType=BIGINT},
      </if>
      <if test="record.konwledgePointId != null">
        konwledge_point_id = #{record.konwledgePointId,jdbcType=BIGINT},
      </if>
      <if test="record.qTitle != null">
        q_title = #{record.qTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.qAnswer != null">
        q_answer = #{record.qAnswer,jdbcType=VARCHAR},
      </if>
      <if test="record.qAddTime != null">
        q_add_time = #{record.qAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.qUserId != null">
        q_user_id = #{record.qUserId,jdbcType=BIGINT},
      </if>
      <if test="record.qDifficultyLevel != null">
        q_difficulty_level = #{record.qDifficultyLevel,jdbcType=DOUBLE},
      </if>
      <if test="record.sId != null">
        s_id = #{record.sId,jdbcType=BIGINT},
      </if>
      <if test="record.qGetTimes != null">
        q_get_times = #{record.qGetTimes,jdbcType=INTEGER},
      </if>
      <if test="record.qDidNum != null">
        q_did_num = #{record.qDidNum,jdbcType=INTEGER},
      </if>
      <if test="record.qCorrectNum != null">
        q_correct_num = #{record.qCorrectNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update questions
    set q_id = #{record.qId,jdbcType=BIGINT},
      question_type_id = #{record.questionTypeId,jdbcType=BIGINT},
      konwledge_point_id = #{record.konwledgePointId,jdbcType=BIGINT},
      q_title = #{record.qTitle,jdbcType=VARCHAR},
      q_answer = #{record.qAnswer,jdbcType=VARCHAR},
      q_add_time = #{record.qAddTime,jdbcType=TIMESTAMP},
      q_user_id = #{record.qUserId,jdbcType=BIGINT},
      q_difficulty_level = #{record.qDifficultyLevel,jdbcType=DOUBLE},
      s_id = #{record.sId,jdbcType=BIGINT},
      q_get_times = #{record.qGetTimes,jdbcType=INTEGER},
      q_did_num = #{record.qDidNum,jdbcType=INTEGER},
      q_correct_num = #{record.qCorrectNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.njxz.exam.modle.Questions">
    update questions
    <set>
      <if test="questionTypeId != null">
        question_type_id = #{questionTypeId,jdbcType=BIGINT},
      </if>
      <if test="konwledgePointId != null">
        konwledge_point_id = #{konwledgePointId,jdbcType=BIGINT},
      </if>
      <if test="qTitle != null">
        q_title = #{qTitle,jdbcType=VARCHAR},
      </if>
      <if test="qAnswer != null">
        q_answer = #{qAnswer,jdbcType=VARCHAR},
      </if>
      <if test="qAddTime != null">
        q_add_time = #{qAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="qUserId != null">
        q_user_id = #{qUserId,jdbcType=BIGINT},
      </if>
      <if test="qDifficultyLevel != null">
        q_difficulty_level = #{qDifficultyLevel,jdbcType=DOUBLE},
      </if>
      <if test="sId != null">
        s_id = #{sId,jdbcType=BIGINT},
      </if>
      <if test="qGetTimes != null">
        q_get_times = #{qGetTimes,jdbcType=INTEGER},
      </if>
      <if test="qDidNum != null">
        q_did_num = #{qDidNum,jdbcType=INTEGER},
      </if>
      <if test="qCorrectNum != null">
        q_correct_num = #{qCorrectNum,jdbcType=INTEGER},
      </if>
    </set>
    where q_id = #{qId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njxz.exam.modle.Questions">
    update questions
    set question_type_id = #{questionTypeId,jdbcType=BIGINT},
      konwledge_point_id = #{konwledgePointId,jdbcType=BIGINT},
      q_title = #{qTitle,jdbcType=VARCHAR},
      q_answer = #{qAnswer,jdbcType=VARCHAR},
      q_add_time = #{qAddTime,jdbcType=TIMESTAMP},
      q_user_id = #{qUserId,jdbcType=BIGINT},
      q_difficulty_level = #{qDifficultyLevel,jdbcType=DOUBLE},
      s_id = #{sId,jdbcType=BIGINT},
      q_get_times = #{qGetTimes,jdbcType=INTEGER},
      q_did_num = #{qDidNum,jdbcType=INTEGER},
      q_correct_num = #{qCorrectNum,jdbcType=INTEGER}
    where q_id = #{qId,jdbcType=BIGINT}
  </update>
  
  <!--试题的抽取次数 -->
  <select id="countgetBy" parameterType="java.lang.Long" resultType="java.lang.Integer">
  	select count(*) from questions q inner join exam_questions eq on q.q_id=eq.question_id where q.q_id=#{0}
  </select>
  
  <!-- 按照试卷Id和题型取出试题信息，并按照难易度排序 -->
  <select id="getQuestionsByEIdAndEQTId" parameterType="java.lang.Long" resultMap="BaseResultMap">
  	select * from questions q inner join exam_questions eq where q.q_id=eq.question_id and eq.exam_id=#{eId} and q.question_type_id=#{eqtId} order by q.q_difficulty_level
  </select>
</mapper>